import os
import angr
import archinfo
import claripy
import signal
import struct
import time
from tqdm import tqdm
import argparse

def set_args(state, regs_path):
    with open(regs_path, "rb") as f:
        regs = f.read()
    print(regs)


def parse_arg():
    parser = argparse.ArgumentParser()
    parser.add_argument("--regs", dest="regs")
    parser.add_argument("--stack", dest="stack")	
    parser.add_argument("--shellcode", dest="shellcode")
    parser.add_argument("--start_address", dest="start_address")
    parser.add_argument("--end_address", dest="end_address")
    args = parser.parse_args()
    return args

def main():
	args = parse_arg()
	
	with open(args.shellcode, "rb") as f:
		shellcode = f.read()
	print(shellcode)

	arch = archinfo.arch_from_id('x86_64')
	p = angr.project.load_shellcode(shellcode, arch, load_address=hex(args.start_address))
	s1 = p.factory.entry_state()
	set_args(s1, args.regs)

if __name__ == "__main__":
    main()
